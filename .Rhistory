sessionInfo()
devtools::install_github("rusher321/rmeta")
install.packages("D:/install_package/Rtools35.exe", repos = NULL)
pkgbuild::find_rtools(debug = TRUE)
devtools::install_github("rusher321/rmeta")
R --version
devtools::install_github("rusher321/rmeta")
devtools::install_github("rusher321/rmeta")
pasteP
pasteP()
library(rmeta)
pasteP()
pasteP
pasteP
library(rmeta)
pasteP()
pasteP
?merge
example("merge")
x
y
authors
books
colnames(books)[1] <- c("name")
merge(authors, books, by.x = "name", by.y = "name", all = TRUE)
authors
colnames(authors)[1] <- c("name")
merge(authors, books, by.x = "name", by.y = "name", all = TRUE)
authors
books
tmp <- books[7, ]
tmp
authorN
authors
colnames(authors) <- colnames(tmp)
merge(authors, books, by.x = "name", by.y = "name", all = TRUE)
authorN
authors
tmp
tmp$tmp <- 1
tmp
mergeP <- function(dat1, dat2, by){
coldat1 <- colnames(dat1)
coldat2 <- colnames(dat2)
interfeature <- intersect(coldat1, coldat2)
if(length(interfeature)==1){
out <- merge(dat1, dat2, by=by, all=T)
}else{
diffdat1 <- setdiff(coldat1, interfeature)
diffdat2 <- setdiff(coldat2, interfeature)
tmp1 <- dat1[, c(by, diffdat1)]
tmp2 <- dat2[, c(by, diffdat2)]
tmp3 <- merge(tmp1, tmp2, by = by, all=T)
tmpC <- rbind(dat1[, interfeature], dat2[, interfeature])
out <- cbind(tmpC, tmp3[, -which(colnames(tmp3)==by)])
}
return(out)
}
authors
authors$tmp2 <- 2
mergeP(authors, tmp)
mergeP(authors, tmp, "name")
library(devtools)
install.packages("Rtools")
getwd9)
getwd()
setwd("D:/work/Berberine2/Asssy/19.metabolism.v2")
source("./function.R")
library(RColorBrewer)
source("./function.R")
my_metabolism_plot4
my_metabolism_plot
my_metabolismC_plot
library(xlsx)
library(pheatmap)
them_dat2 <- data.frame(theme_color = brewer.pal(3 ,"Dark2"), phlyum = c("Butyrate", "Propionate", "short-chain fatty acids transporter"))
them_dat2 <- apply(them_dat2, 2, as.character)
cutoff <- 0.05
name <- "all"
cutoff <- as.numeric(cutoff)
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)
sp2 <- read.table("../../Result/new_organize/03.tax/ko/fatty.tab.txt",row.names = 1,header = T,check.names = F, sep = "\t")
qdat <- data.frame(Placebo = Placebo.f[rownames(sp2), "z.score"], Probiotic = Probiotic.f[rownames(sp2), "z.score"], BBR = BBR.f[rownames(sp2), "z.score"], mix = mix.f[rownames(sp2), "z.score"])
pvalue <- data.frame(Placebo = Placebo.f[rownames(sp2), "p.adjust"], Probiotic = Probiotic.f[rownames(sp2),  "p.adjust"], BBR = BBR.f[rownames(sp2),  "p.adjust"], mix = mix.f[rownames(sp2),  "p.adjust"])
rownames(qdat) <- rownames(sp2)
rownames(pvalue) <- rownames(sp2)
# matchup the phylum & species
sp <- sp2[rownames(qdat),"KO",drop=F]
#rownames(sp) <- as.character(sp2[,2])
sp$KO <- as.character(sp$KO)
index <- which(them_dat2[,2]  %in% sp$KO)
them_dat2[index, 1] -> KO
names(KO) <- them_dat2[index, 2]
ann_colors <- list(KO = KO)
#sp <- sp[order(sp$KO),,drop=F]
qdat_g <- qdat[rownames(sp),]
qdat_p <- pvalue[rownames(sp),]
qdat_g <- apply(qdat_g, 2, function(x){as.numeric(as.character(x))})
qdat_p <- apply(qdat_p, 2, function(x){as.numeric(as.character(x))})
rownames(qdat_g) <-  as.character(sp2[,2])
rownames(qdat_p) <- as.character(sp2[,2])
qdat_num <- ifelse(qdat_p <= 0.001, "***", ifelse(qdat_p <= 0.01, "**",
ifelse(qdat_p <= 0.05, "*", " ")))
rownames(sp) <- sp2$anno
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = T,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
qdat
sp
sp2
sp2
cutoff <- as.numeric(cutoff)
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)
sp2 <- read.table("../../Result/new_organize/03.tax/ko/fatty.tab.txt",row.names = 1,header = T,check.names = F, sep = "\t")
sp2$anno2 <- paste0(sp2$anno , " ( ", rownames(sp2), " )")
qdat <- data.frame(Placebo = Placebo.f[rownames(sp2), "z.score"], Probiotic = Probiotic.f[rownames(sp2), "z.score"], BBR = BBR.f[rownames(sp2), "z.score"], mix = mix.f[rownames(sp2), "z.score"])
pvalue <- data.frame(Placebo = Placebo.f[rownames(sp2), "p.adjust"], Probiotic = Probiotic.f[rownames(sp2),  "p.adjust"], BBR = BBR.f[rownames(sp2),  "p.adjust"], mix = mix.f[rownames(sp2),  "p.adjust"])
rownames(qdat) <- rownames(sp2)
rownames(pvalue) <- rownames(sp2)
# matchup the phylum & species
sp <- sp2[rownames(qdat),"KO",drop=F]
#rownames(sp) <- as.character(sp2[,2])
sp$KO <- as.character(sp$KO)
index <- which(them_dat2[,2]  %in% sp$KO)
them_dat2[index, 1] -> KO
names(KO) <- them_dat2[index, 2]
ann_colors <- list(KO = KO)
#sp <- sp[order(sp$KO),,drop=F]
qdat_g <- qdat[rownames(sp),]
qdat_p <- pvalue[rownames(sp),]
qdat_g <- apply(qdat_g, 2, function(x){as.numeric(as.character(x))})
qdat_p <- apply(qdat_p, 2, function(x){as.numeric(as.character(x))})
rownames(qdat_g) <-  as.character(sp2[,2])
rownames(qdat_p) <- as.character(sp2[,2])
qdat_num <- ifelse(qdat_p <= 0.001, "***", ifelse(qdat_p <= 0.01, "**",
ifelse(qdat_p <= 0.05, "*", " ")))
rownames(sp) <- sp2$anno2
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = T,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
rownames(qdat_g) <-  as.character(sp2[,3])
rownames(qdat_p) <- as.character(sp2[,3])
qdat_num <- ifelse(qdat_p <= 0.001, "***", ifelse(qdat_p <= 0.01, "**",
ifelse(qdat_p <= 0.05, "*", " ")))
rownames(sp) <- sp2$anno2
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = T,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
cutoff <- as.numeric(cutoff)
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)
rownames(Placebo.f)
cutoff <- as.numeric(cutoff)
# to select the Butyrate & short-chain fatty acids transport
index <- c("K00634", "K00929", "K01034", "K02106")
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)[index, ]
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)[index, ]
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)[index, ]
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)[index, ]
sp2 <- read.table("../../Result/new_organize/03.tax/ko/fatty.tab.txt",row.names = 1,header = T,check.names = F, sep = "\t")
sp2$anno2 <- paste0(sp2$anno , " ( ", rownames(sp2), " )")
qdat <- data.frame(Placebo = Placebo.f[rownames(sp2), "z.score"], Probiotic = Probiotic.f[rownames(sp2), "z.score"], BBR = BBR.f[rownames(sp2), "z.score"], mix = mix.f[rownames(sp2), "z.score"])
pvalue <- data.frame(Placebo = Placebo.f[rownames(sp2), "p.adjust"], Probiotic = Probiotic.f[rownames(sp2),  "p.adjust"], BBR = BBR.f[rownames(sp2),  "p.adjust"], mix = mix.f[rownames(sp2),  "p.adjust"])
rownames(qdat) <- rownames(sp2)
rownames(pvalue) <- rownames(sp2)
# matchup the phylum & species
sp <- sp2[rownames(qdat),"KO",drop=F]
#rownames(sp) <- as.character(sp2[,2])
sp$KO <- as.character(sp$KO)
index <- which(them_dat2[,2]  %in% sp$KO)
them_dat2[index, 1] -> KO
names(KO) <- them_dat2[index, 2]
ann_colors <- list(KO = KO)
#sp <- sp[order(sp$KO),,drop=F]
qdat_g <- qdat[rownames(sp),]
qdat_p <- pvalue[rownames(sp),]
qdat_g <- apply(qdat_g, 2, function(x){as.numeric(as.character(x))})
qdat_p <- apply(qdat_p, 2, function(x){as.numeric(as.character(x))})
rownames(qdat_g) <-  as.character(sp2[,3])
rownames(qdat_p) <- as.character(sp2[,3])
qdat_num <- ifelse(qdat_p <= 0.001, "***", ifelse(qdat_p <= 0.01, "**",
ifelse(qdat_p <= 0.05, "*", " ")))
rownames(sp) <- sp2$anno2
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = T,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
qdt_g
qdat_g
View(qdat_g)
qdat
cutoff <- as.numeric(cutoff)
# to select the Butyrate & short-chain fatty acids transport
index <- c("K00634", "K00929", "K01034", "K02106")
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)[index, ]
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)[index, ]
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)[index, ]
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)[index, ]
sp2 <- read.table("../../Result/new_organize/03.tax/ko/fatty.tab.txt",row.names = 1,header = T,check.names = F, sep = "\t")
sp2$anno2 <- paste0(sp2$anno , " ( ", rownames(sp2), " )")
qdat <- data.frame(Placebo = Placebo.f[rownames(sp2), "z.score"], Probiotic = Probiotic.f[rownames(sp2), "z.score"], BBR = BBR.f[rownames(sp2), "z.score"], mix = mix.f[rownames(sp2), "z.score"])
pvalue <- data.frame(Placebo = Placebo.f[rownames(sp2), "p.adjust"], Probiotic = Probiotic.f[rownames(sp2),  "p.adjust"], BBR = BBR.f[rownames(sp2),  "p.adjust"], mix = mix.f[rownames(sp2),  "p.adjust"])
max.f
mix.f
cutoff <- as.numeric(cutoff)
# to select the Butyrate & short-chain fatty acids transport
index <- c("K00634", "K00929", "K01034", "K02106")
Placebo.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Placebo",  header = T, row.names=1)
Probiotic.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics",  header = T, row.names=1)
BBR.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "BBR",  header = T, row.names=1)
mix.f <- read.xlsx2(paste0("../../Result/new_organize/03.tax/ko/compare.",name,".scfa.xlsx"), sheetName = "Probiotics +BBR",  header = T, row.names=1)
sp2 <- read.table("../../Result/new_organize/03.tax/ko/fatty.tab.txt",row.names = 1,header = T,check.names = F, sep = "\t")[index, ]
sp2$anno2 <- paste0(sp2$anno , " ( ", rownames(sp2), " )")
qdat <- data.frame(Placebo = Placebo.f[rownames(sp2), "z.score"], Probiotic = Probiotic.f[rownames(sp2), "z.score"], BBR = BBR.f[rownames(sp2), "z.score"], mix = mix.f[rownames(sp2), "z.score"])
pvalue <- data.frame(Placebo = Placebo.f[rownames(sp2), "p.adjust"], Probiotic = Probiotic.f[rownames(sp2),  "p.adjust"], BBR = BBR.f[rownames(sp2),  "p.adjust"], mix = mix.f[rownames(sp2),  "p.adjust"])
rownames(qdat) <- rownames(sp2)
rownames(pvalue) <- rownames(sp2)
# matchup the phylum & species
sp <- sp2[rownames(qdat),"KO",drop=F]
#rownames(sp) <- as.character(sp2[,2])
sp$KO <- as.character(sp$KO)
index <- which(them_dat2[,2]  %in% sp$KO)
them_dat2[index, 1] -> KO
names(KO) <- them_dat2[index, 2]
ann_colors <- list(KO = KO)
#sp <- sp[order(sp$KO),,drop=F]
qdat_g <- qdat[rownames(sp),]
qdat_p <- pvalue[rownames(sp),]
qdat_g <- apply(qdat_g, 2, function(x){as.numeric(as.character(x))})
qdat_p <- apply(qdat_p, 2, function(x){as.numeric(as.character(x))})
rownames(qdat_g) <-  as.character(sp2[,3])
rownames(qdat_p) <- as.character(sp2[,3])
qdat_num <- ifelse(qdat_p <= 0.001, "***", ifelse(qdat_p <= 0.01, "**",
ifelse(qdat_p <= 0.05, "*", " ")))
rownames(sp) <- sp2$anno2
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = T,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(20)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = F,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-5,5,0.5), legend_breaks =seq(-4, 4, 2), legend_labels = c("-4","-2", "0", "2", "4"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(20)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = F,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-5,5,0.5), legend_breaks =seq(-4, 4, 2), legend_labels = c("-4","-2", "0", "2", "4"), fontsize_number = 8,labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(20)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = F,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-5,5,0.5), legend_breaks =seq(-4, 4, 2), legend_labels = c("-4","-2", "0", "2", "4"), fontsize_number = 10,labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(24)
pheatmap(-(qdat_g), display_numbers = qdat_num, cluster_rows = F,  color =colt, cluster_cols = F, gaps_col  = c(1,2,3), annotation_row  = sp, annotation_colors = ann_colors, breaks=seq(-5,5,0.5), legend_breaks =seq(-4, 4, 2), legend_labels = c("-4","-2", "0", "2", "4"), labels_col = c("Placebo", "Probiotic", "BBR", "Probiotics +BBR") )
qdat_g
-qdat_g
setwd("D:/work/Berberine2/Asssy/20.10NGT")
pip.dat <- read.csv("../../Result/20.10NGT/REPORT2.txt",header = T,check.names = F,row.names = 1, sep = "\t")
config <- data.frame(config = c(rep("base", 10), rep("end", 10)))
rownames(config) <- pip.dat$sample
species <- read.table("../../Result/20.10NGT/berber.species.pro", header = T, check.names = F, row.names = 1, sep = "\t")
species <- read.table("../../Result/20.10NGT/berber.species.pro", header = T, check.names = F, row.names = 1, sep = "\t")
species.s <- t(species[, row.names(config)])
filter <- read.table("../../Result/14.Cutoff of genus and species/Berber.filter.species.list2.txt")
species.sf <- species.s[, as.character(filter$V1)]
pip.dat <- read.csv("../../Result/20.10NGT/REPORT2.txt",header = T,check.names = F,row.names = 1, sep = "\t")
config <- data.frame(config = c(rep("base", 10), rep("end", 10)))
rownames(config) <- pip.dat$sample
species <- read.table("../../Result/20.10NGT/NGT.berber.species.pro", header = T, check.names = F, row.names = 1, sep = "\t")
species.s <- t(species[, row.names(config)])
filter <- read.table("../../Result/14.Cutoff of genus and species/Berber.filter.species.list2.txt")
species.sf <- species.s[, as.character(filter$V1)]
out <- matrix(NA, nrow=ncol(species.sf), ncol = 5)
colnames(out) <- c("wilcox.p", "sign.p", "base_median", "end_median", "enrich")
if(any(rownames(species.sf)==rownames(config))){
print("ID is OK")
}else{
stop("check the data")
}
for(i in 1:ncol(species.sf)){
tmp <- as.numeric(species.sf[,i])
base <- tmp[1:10]
treat <- tmp[11:20]
pvalue <- wilcox.test(base, treat, paired = T)$p.value
wilcox_sign <- pvalue(wilcoxsign_test(base~treat))
mean_rank <- tapply(rank(c(base, treat)), config[,1], mean, na.rm=T)
median_abun <-  tapply(c(base, treat), config[,1],  median, na.rm=T)
z_score <- statistic(wilcoxsign_test(base~treat))
out[i, 1:5] <- c(pvalue, wilcox_sign, median_abun, z_score)
}
rownames(out) <- colnames(species.sf)
library(coin)
out <- matrix(NA, nrow=ncol(species.sf), ncol = 5)
colnames(out) <- c("wilcox.p", "sign.p", "base_median", "end_median", "enrich")
if(any(rownames(species.sf)==rownames(config))){
print("ID is OK")
}else{
stop("check the data")
}
for(i in 1:ncol(species.sf)){
tmp <- as.numeric(species.sf[,i])
base <- tmp[1:10]
treat <- tmp[11:20]
pvalue <- wilcox.test(base, treat, paired = T)$p.value
wilcox_sign <- pvalue(wilcoxsign_test(base~treat))
mean_rank <- tapply(rank(c(base, treat)), config[,1], mean, na.rm=T)
median_abun <-  tapply(c(base, treat), config[,1],  median, na.rm=T)
z_score <- statistic(wilcoxsign_test(base~treat))
out[i, 1:5] <- c(pvalue, wilcox_sign, median_abun, z_score)
}
rownames(out) <- colnames(species.sf)
out
head(out)
colnames(species.sf)
row(species.sf)
rownames(species.sf)
sp <- read.csv("../../Result/03.profile/Species/IGC_species_phylum.csv",row.names = 1,header = T,check.names = F)
dim(out)
head(out)
sp <- read.csv("../../Result/03.profile/Species/IGC_species_phylum.csv",row.names = 1,header = T,check.names = F)
qdat <- data.frame(all= out[,5, drop=F])
pvalue <-  data.frame(all = out[,2, drop=F])
rownames(qdat) <- rownames(out)
rownames(pvalue) <- rownames(out)
# matchup the phylum & species
sp <- sp[rownames(qdat),"phylum",drop=F]
sp$phylum <- as.character(sp$phylum)
sp <- sp[order(sp$phylum),,drop=F]
qdat_g <- qdat[rownames(sp),, drop=F]
qdat_p <- pvalue[rownames(sp),drop=F]
qdat_g
head(qdat_g)
sp <- read.csv("../../Result/03.profile/Species/IGC_species_phylum.csv",row.names = 1,header = T,check.names = F)
qdat <- data.frame(all= out[,5, drop=F])
pvalue <-  data.frame(all = out[,2, drop=F])
rownames(qdat) <- rownames(out)
rownames(pvalue) <- rownames(out)
qdat
head(qdat)
sp <- read.csv("../../Result/03.profile/Species/IGC_species_phylum.csv",row.names = 1,header = T,check.names = F)
qdat <- as.data.frame(out[,5, drop=F])
pvalue <-  as.data.frame(out[,2, drop=F])
rownames(qdat) <- rownames(out)
rownames(pvalue) <- rownames(out)
head(qdat)
head(pvalue)
head()sp
head(sp)
sp <- sp[order(sp$phylum),,drop=F]
qdat_g <- qdat[rownames(sp),, drop=F]
qdat_p <- pvalue[rownames(sp),,drop=F]
qdat_num <- ifelse(qdat_p <= 0.05, "*", " ")
pheatmap(-t(qdat_g), display_numbers = t(qdat_num), cluster_rows = F,cluster_cols = F, annotation_col  = sp,  breaks=seq(-8,8,1))
head(qdat_g)
head(qdat)
head(sp)
sp <- sp[rownames(qdat),"phylum",drop=F]
sp$phylum <- as.character(sp$phylum)
head(sp)
sp <- sp[order(sp$phylum),,drop=F]
qdat_g <- qdat[rownames(sp),, drop=F]
qdat_p <- pvalue[rownames(sp),,drop=F]
qdat_num <- ifelse(qdat_p <= 0.05, "*", " ")
head(qdat_g)
str(qdat_g)
qdat_num
pheatmap(-t(qdat_g), display_numbers = t(qdat_num), cluster_rows = F,cluster_cols = F, annotation_col  = sp,  breaks=seq(-8,8,1))
pheatmap(-t(qdat_g), color = colt, display_numbers = t(qdat_num), cluster_rows = F,cluster_cols = F, annotation_col  = sp,  breaks=seq(-8,8,1))
colt <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(58)
pheatmap(-t(qdat_g), color = colt, display_numbers = t(qdat_num), cluster_rows = F,cluster_cols = F, annotation_col  = sp,  breaks=seq(-8,8,1))
pheatmap(-t(qdat_g), color = colt, display_numbers = t(qdat_num), cluster_rows = F,cluster_cols = F, annotation_col  = sp,  breaks=seq(-8,9,0.3), legend_breaks =seq(-8, 8, 4), legend_labels = c("-8","-4","0", "4", "8"))
